@model OnlineElectronicsStore.Domain.Response.IBaseResponse<List<OnlineElectronicsStore.Domain.ViewModels.Product.ProductViewModel>>

<style>
    article
    {
        position: relative;
        z-index: 2;
        display: grid;
        margin: 0 5vw;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        grid-auto-rows: auto;
        grid-auto-flow: row;
        grid-gap: 5px;
        font-size: 18px;
    }
    
    section
    {
        display: grid;
        grid-gap: 5px;
        border-radius: 10px;
        box-shadow: 0 0 10px 1px rgba(0,0,0,0.2);
        padding: 15px;
        grid-template-rows: 45% 30% 10% 10%;
        grid-template-areas: 
    	"imageProduct imageProduct"
    	"nameProduct nameProduct"
    	"stars wishList"
    	"priceProduct cart";
    }
    
    section:hover
    {
        box-shadow: 0 0 10px 1px rgba(0,0,0,0.6);
        transition: 0.3s ease;
    }
    
    section a
    {
        text-decoration: none;
        color: black;
        font-size: 16px;
        grid-column: 1 / span 2;
        text-align: center;
    }
    
    section a:visited
    {
        text-decoration: none;
    }
    
    section img
    {
        width: 100%;
        grid-area: imageProduct;
    }
    
    .nameProduct
    {
        grid-area: nameProduct;
    }
    
    .stars
    {
        grid-area: stars;
        display: inline-block;
        font-size: 22px;
    }
    
    .stars:before
    {
        content: '★★★★★';
        letter-spacing: 3px;
        color: #f03a59;
    }
    .stars[data-rating='1']:before { content: '★☆☆☆☆'; }
    .stars[data-rating='2']:before { content: '★★☆☆☆'; }
    .stars[data-rating='3']:before { content: '★★★☆☆'; }
    .stars[data-rating='4']:before { content: '★★★★☆'; }
    .stars[data-rating='5']:before { content: '★★★★★'; }
    
    .wishList
    {
        grid-area: wishList;
        background: transparent;
        border: 0;
        color: #e00027;
        font-size: 18px;
    }
    
    .wishList:hover
    {
        transition: 0.3s ease-out;
        color: #f03a59;
        cursor: pointer;
        text-shadow: 0 0 10px rgba(0,0,0,1);
    }
    
    .priceProduct
    {
        grid-area: priceProduct;
        display: grid;
        font-size: 20px;
    }
    
    .cart
    {
        grid-area: cart;
        background-color: #e00027;
        color: white;
        border: 0;
        border-radius: 5px;
        font-size: 16px;
        padding: 0 15px 0 15px;
    }
    
    .cart:hover
    {
        transition: 0.3s ease-out;
        background: #f03a59;
        cursor: pointer;
        box-shadow: 0 0 15px 5px #CCA3AA;
    }
</style>

@for (int i = 0; i < 5; i++)
{
    @foreach (var product in Model.Data)
    {
        <section>
            <a href="@Url.Action("ProductDetails", "Product", new { id = @product.Id })">
                @if (@product.ImageBase64 != null)
                {
                    <img src="data:image;base64,@Convert.ToBase64String(@product.ImageBase64)" alt="@product.Name">
                }
                else
                {
                    <img alt="@product.Name" src="~/Resources/NullImage.png">
                }
                <p class="nameProduct">@product.Name</p>
            </a>
            <div class="stars" data-rating="3"></div>
            <button class="wishList"><i class="fa-solid fa-heart"></i></button>
            <p class="priceProduct">@product.Price ₴</p>
            <button class="cart" onclick="addToCart(@product.Id)">
                <i class="fa-solid fa-cart-shopping"></i>
            </button>
        </section>
    }
}

<script>
    function addToCart(id) {
        $.ajax({
            type: 'POST',
            url: '/Cart/AddCart',
            data: { id: id },
            success: function (data) {
                $('#cartMenuContainer').find('.cartMenu').html($(data).find('.cartMenu').html());
            },
            error: function () {

            }
        });
    }
</script>